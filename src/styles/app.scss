@import "app-styles";

/*
  :root is used to define global styles and CSS variables that apply to the entire document.
  These styles will cascade to all elements, including those outside the React app.
  Use it for consistent global settings like font families and colours.
*/
:root {
  --background-color: #14253D; /* Global background colour for the entire app */
  --font-family:"Sans", sans-serif; /* Global font family for text */
}

/*
  Global styles for the <html> and <body> elements:
  - Removes default browser margin and padding to avoid unwanted spacing.
  - Ensures the app fills the entire width and height of the viewport.
  - Sets a global font family and background colour.
  - Disables scrollbars with overflow: hidden (prevents scrolling).
*/
html, body {
  margin: 0; /* Removes default margin added by browsers */
  padding: 0; /* Removes default padding added by browsers */
  width: 100%; /* Ensures the content spans the full width of the viewport */
  height: 100%; /* Ensures the content spans the full height of the viewport */
  font-family: var(--font-family), serif; /* Uses the font family defined in :root */
  background-color: var(--background-color); /* Sets the background colour globally */
  overflow: hidden; /* Disables scrollbars (hides content that overflows the viewport) */
}

/*
  #root is the container where React mounts the application.
  It spans the entire viewport, ensuring that React content fills the screen.
  Use this for layout-specific styling (e.g., flexbox, centring content).
*/
#root {
  width: 100%; /* Ensures the React app spans the full width of the viewport */
  height: 100%; /* Ensures the React app spans the full height of the viewport */
  display: flex; /* Enables a flexbox layout for child components */
  flex-direction: column; /* Stacks child components vertically by default */
}

.button {
  all: unset; /* Remove default button styles */
}

